// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SawitApi.Data;

#nullable disable

namespace SawitApi.Migrations
{
    [DbContext(typeof(SawitDbContext))]
    partial class SawitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SawitApi.Models.Campagne", b =>
                {
                    b.Property<int>("CampagneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CampagneId"));

                    b.Property<string>("CampagneDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CampagneName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CampagneId");

                    b.HasIndex("UserId");

                    b.ToTable("Campagnes");
                });

            modelBuilder.Entity("SawitApi.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CandidateId"));

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CampagneId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CandidateId");

                    b.HasIndex("CampagneId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("SawitApi.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExperienceId"));

                    b.Property<string>("ExpeienceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ExperienceId");

                    b.HasIndex("UserId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("SawitApi.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostId"));

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostContent")
                        .HasColumnType("text");

                    b.Property<string>("PostIMediaPath")
                        .HasColumnType("text");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("SawitApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHashed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SawitApi.Models.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VoteId"));

                    b.Property<int>("CampagneId")
                        .HasColumnType("integer");

                    b.Property<int>("CandidateId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("VotedAT")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("VoteId");

                    b.HasIndex("CampagneId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("UserId", "CampagneId")
                        .IsUnique();

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("SawitApi.Models.Campagne", b =>
                {
                    b.HasOne("SawitApi.Models.User", "User")
                        .WithMany("Campagnes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SawitApi.Models.Candidate", b =>
                {
                    b.HasOne("SawitApi.Models.Campagne", "Campagne")
                        .WithOne("Candidate")
                        .HasForeignKey("SawitApi.Models.Candidate", "CampagneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SawitApi.Models.User", "User")
                        .WithMany("Candidate")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campagne");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SawitApi.Models.Experience", b =>
                {
                    b.HasOne("SawitApi.Models.User", "User")
                        .WithMany("Experience")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SawitApi.Models.Post", b =>
                {
                    b.HasOne("SawitApi.Models.User", "User")
                        .WithMany("Post")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SawitApi.Models.Vote", b =>
                {
                    b.HasOne("SawitApi.Models.Campagne", "Campagne")
                        .WithMany()
                        .HasForeignKey("CampagneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SawitApi.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SawitApi.Models.User", "User")
                        .WithMany("Vote")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campagne");

                    b.Navigation("Candidate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SawitApi.Models.Campagne", b =>
                {
                    b.Navigation("Candidate")
                        .IsRequired();
                });

            modelBuilder.Entity("SawitApi.Models.User", b =>
                {
                    b.Navigation("Campagnes");

                    b.Navigation("Candidate");

                    b.Navigation("Experience");

                    b.Navigation("Post");

                    b.Navigation("Vote");
                });
#pragma warning restore 612, 618
        }
    }
}
